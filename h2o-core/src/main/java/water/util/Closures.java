package water.util;

import water.util.MoveableCode;

import javax.annotation.Nullable;

import static water.util.Functions.*;
import java.io.IOException;

/**
 * Contains closures for all our 42 functions (or maybe more)
 * Closures are required to pass java functionality to the cloud
 *
 * generated by this script:
 def p(ss: Seq[String]) = ss grouped 10 map (_ mkString ",") mkString ",\n      "
 def g(n:Int) {
 val typeArgs = p((1 to n) map ("X"+_))
 val funType = s"Function$n<$typeArgs, Y>"
 val closureType = s"Closure$n<$typeArgs, Y>"
 println(
 s"""
  public static class $closureType
    extends MoveableCode
    implements $funType {
      private final int arity = $n;
      private Closure$n($funType instance)
        throws IOException { super(instance); }
      @SuppressWarnings("unchecked") @Nullable @Override public Y
      apply(${p((1 to n) map (i => s"X$i x$i"))}) {
        return (($funType) instance()).apply(${typeArgs.toLowerCase});
      }
    }

  public static <$typeArgs, Y> $closureType enclose($funType f) throws IOException {
    return (f instanceof MoveableCode) ? ($closureType)f : new Closure$n<>(f);
  }
 """.tail)
 }
 def gen(n:Int) = 1 to n foreach g
 */
public class Closures {
  public static class Closure1<X1, Y>
      extends MoveableCode
      implements Function1<X1, Y> {
    private final int arity = 1;
    private Closure1(Function1<X1, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable
    @Override public Y
    apply(X1 x1) {
      return ((Function1<X1, Y>) instance()).apply(x1);
    }
  }

  public static <X1, Y> Closure1<X1, Y> enclose(Function1<X1, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure1<X1, Y>)f : new Closure1<>(f);
  }

  public static class Closure2<X1,X2, Y>
      extends MoveableCode
      implements Function2<X1,X2, Y> {
    private final int arity = 2;
    private Closure2(Function2<X1,X2, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2) {
      return ((Function2<X1,X2, Y>) instance()).apply(x1,x2);
    }
  }

  public static <X1,X2, Y> Closure2<X1,X2, Y> enclose(Function2<X1,X2, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure2<X1,X2, Y>)f : new Closure2<>(f);
  }

  public static class Closure3<X1,X2,X3, Y>
      extends MoveableCode
      implements Function3<X1,X2,X3, Y> {
    private final int arity = 3;
    private Closure3(Function3<X1,X2,X3, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3) {
      return ((Function3<X1,X2,X3, Y>) instance()).apply(x1,x2,x3);
    }
  }

  public static <X1,X2,X3, Y> Closure3<X1,X2,X3, Y> enclose(Function3<X1,X2,X3, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure3<X1,X2,X3, Y>)f : new Closure3<>(f);
  }

  public static class Closure4<X1,X2,X3,X4, Y>
      extends MoveableCode
      implements Function4<X1,X2,X3,X4, Y> {
    private final int arity = 4;
    private Closure4(Function4<X1,X2,X3,X4, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4) {
      return ((Function4<X1,X2,X3,X4, Y>) instance()).apply(x1,x2,x3,x4);
    }
  }

  public static <X1,X2,X3,X4, Y> Closure4<X1,X2,X3,X4, Y> enclose(Function4<X1,X2,X3,X4, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure4<X1,X2,X3,X4, Y>)f : new Closure4<>(f);
  }

  public static class Closure5<X1,X2,X3,X4,X5, Y>
      extends MoveableCode
      implements Function5<X1,X2,X3,X4,X5, Y> {
    private final int arity = 5;
    private Closure5(Function5<X1,X2,X3,X4,X5, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5) {
      return ((Function5<X1,X2,X3,X4,X5, Y>) instance()).apply(x1,x2,x3,x4,x5);
    }
  }

  public static <X1,X2,X3,X4,X5, Y> Closure5<X1,X2,X3,X4,X5, Y> enclose(Function5<X1,X2,X3,X4,X5, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure5<X1,X2,X3,X4,X5, Y>)f : new Closure5<>(f);
  }

  public static class Closure6<X1,X2,X3,X4,X5,X6, Y>
      extends MoveableCode
      implements Function6<X1,X2,X3,X4,X5,X6, Y> {
    private final int arity = 6;
    private Closure6(Function6<X1,X2,X3,X4,X5,X6, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6) {
      return ((Function6<X1,X2,X3,X4,X5,X6, Y>) instance()).apply(x1,x2,x3,x4,x5,x6);
    }
  }

  public static <X1,X2,X3,X4,X5,X6, Y> Closure6<X1,X2,X3,X4,X5,X6, Y> enclose(Function6<X1,X2,X3,X4,X5,X6, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure6<X1,X2,X3,X4,X5,X6, Y>)f : new Closure6<>(f);
  }

  public static class Closure7<X1,X2,X3,X4,X5,X6,X7, Y>
      extends MoveableCode
      implements Function7<X1,X2,X3,X4,X5,X6,X7, Y> {
    private final int arity = 7;
    private Closure7(Function7<X1,X2,X3,X4,X5,X6,X7, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7) {
      return ((Function7<X1,X2,X3,X4,X5,X6,X7, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7, Y> Closure7<X1,X2,X3,X4,X5,X6,X7, Y> enclose(Function7<X1,X2,X3,X4,X5,X6,X7, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure7<X1,X2,X3,X4,X5,X6,X7, Y>)f : new Closure7<>(f);
  }

  public static class Closure8<X1,X2,X3,X4,X5,X6,X7,X8, Y>
      extends MoveableCode
      implements Function8<X1,X2,X3,X4,X5,X6,X7,X8, Y> {
    private final int arity = 8;
    private Closure8(Function8<X1,X2,X3,X4,X5,X6,X7,X8, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8) {
      return ((Function8<X1,X2,X3,X4,X5,X6,X7,X8, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8, Y> Closure8<X1,X2,X3,X4,X5,X6,X7,X8, Y> enclose(Function8<X1,X2,X3,X4,X5,X6,X7,X8, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure8<X1,X2,X3,X4,X5,X6,X7,X8, Y>)f : new Closure8<>(f);
  }

  public static class Closure9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y>
      extends MoveableCode
      implements Function9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y> {
    private final int arity = 9;
    private Closure9(Function9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9) {
      return ((Function9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9, Y> Closure9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y> enclose(Function9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure9<X1,X2,X3,X4,X5,X6,X7,X8,X9, Y>)f : new Closure9<>(f);
  }

  public static class Closure10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y>
      extends MoveableCode
      implements Function10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y> {
    private final int arity = 10;
    private Closure10(Function10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10) {
      return ((Function10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y> Closure10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y> enclose(Function10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure10<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10, Y>)f : new Closure10<>(f);
  }

  public static class Closure11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11, Y>
      extends MoveableCode
      implements Function11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11, Y> {
    private final int arity = 11;
    private Closure11(Function11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11) {
      return ((Function11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11, Y> Closure11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11, Y> enclose(Function11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure11<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11, Y>)f : new Closure11<>(f);
  }

  public static class Closure12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12, Y>
      extends MoveableCode
      implements Function12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12, Y> {
    private final int arity = 12;
    private Closure12(Function12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12) {
      return ((Function12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12, Y> Closure12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12, Y> enclose(Function12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure12<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12, Y>)f : new Closure12<>(f);
  }

  public static class Closure13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13, Y>
      extends MoveableCode
      implements Function13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13, Y> {
    private final int arity = 13;
    private Closure13(Function13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13) {
      return ((Function13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13, Y> Closure13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13, Y> enclose(Function13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure13<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13, Y>)f : new Closure13<>(f);
  }

  public static class Closure14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14, Y>
      extends MoveableCode
      implements Function14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14, Y> {
    private final int arity = 14;
    private Closure14(Function14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14) {
      return ((Function14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14, Y> Closure14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14, Y> enclose(Function14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure14<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14, Y>)f : new Closure14<>(f);
  }

  public static class Closure15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15, Y>
      extends MoveableCode
      implements Function15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15, Y> {
    private final int arity = 15;
    private Closure15(Function15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15) {
      return ((Function15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15, Y> Closure15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15, Y> enclose(Function15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure15<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15, Y>)f : new Closure15<>(f);
  }

  public static class Closure16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16, Y>
      extends MoveableCode
      implements Function16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16, Y> {
    private final int arity = 16;
    private Closure16(Function16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16) {
      return ((Function16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16, Y> Closure16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16, Y> enclose(Function16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure16<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16, Y>)f : new Closure16<>(f);
  }

  public static class Closure17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17, Y>
      extends MoveableCode
      implements Function17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17, Y> {
    private final int arity = 17;
    private Closure17(Function17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17) {
      return ((Function17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17, Y> Closure17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17, Y> enclose(Function17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure17<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17, Y>)f : new Closure17<>(f);
  }

  public static class Closure18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18, Y>
      extends MoveableCode
      implements Function18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18, Y> {
    private final int arity = 18;
    private Closure18(Function18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18) {
      return ((Function18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18, Y> Closure18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18, Y> enclose(Function18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure18<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18, Y>)f : new Closure18<>(f);
  }

  public static class Closure19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19, Y>
      extends MoveableCode
      implements Function19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19, Y> {
    private final int arity = 19;
    private Closure19(Function19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19) {
      return ((Function19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19, Y> Closure19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19, Y> enclose(Function19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure19<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19, Y>)f : new Closure19<>(f);
  }

  public static class Closure20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y>
      extends MoveableCode
      implements Function20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y> {
    private final int arity = 20;
    private Closure20(Function20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20) {
      Object ins = instance();
//      ins.getClass().getMethod("apply", )
      return ((Function20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y> Closure20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y> enclose(Function20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure20<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20, Y>)f : new Closure20<>(f);
  }

  public static class Closure21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21, Y>
      extends MoveableCode
      implements Function21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21, Y> {
    private final int arity = 21;
    private Closure21(Function21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21) {
      return ((Function21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21, Y> Closure21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21, Y> enclose(Function21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure21<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21, Y>)f : new Closure21<>(f);
  }

  public static class Closure22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22, Y>
      extends MoveableCode
      implements Function22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22, Y> {
    private final int arity = 22;
    private Closure22(Function22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22) {
      return ((Function22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22, Y> Closure22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22, Y> enclose(Function22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure22<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22, Y>)f : new Closure22<>(f);
  }

  public static class Closure23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23, Y>
      extends MoveableCode
      implements Function23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23, Y> {
    private final int arity = 23;
    private Closure23(Function23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23) {
      return ((Function23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23, Y> Closure23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23, Y> enclose(Function23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure23<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23, Y>)f : new Closure23<>(f);
  }

  public static class Closure24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24, Y>
      extends MoveableCode
      implements Function24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24, Y> {
    private final int arity = 24;
    private Closure24(Function24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24) {
      return ((Function24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24, Y> Closure24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24, Y> enclose(Function24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure24<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24, Y>)f : new Closure24<>(f);
  }

  public static class Closure25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25, Y>
      extends MoveableCode
      implements Function25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25, Y> {
    private final int arity = 25;
    private Closure25(Function25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25) {
      return ((Function25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25, Y> Closure25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25, Y> enclose(Function25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure25<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25, Y>)f : new Closure25<>(f);
  }

  public static class Closure26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26, Y>
      extends MoveableCode
      implements Function26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26, Y> {
    private final int arity = 26;
    private Closure26(Function26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26) {
      return ((Function26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26, Y> Closure26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26, Y> enclose(Function26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure26<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26, Y>)f : new Closure26<>(f);
  }

  public static class Closure27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27, Y>
      extends MoveableCode
      implements Function27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27, Y> {
    private final int arity = 27;
    private Closure27(Function27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27) {
      return ((Function27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27, Y> Closure27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27, Y> enclose(Function27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure27<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27, Y>)f : new Closure27<>(f);
  }

  public static class Closure28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28, Y>
      extends MoveableCode
      implements Function28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28, Y> {
    private final int arity = 28;
    private Closure28(Function28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28) {
      return ((Function28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28, Y> Closure28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28, Y> enclose(Function28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure28<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28, Y>)f : new Closure28<>(f);
  }

  public static class Closure29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29, Y>
      extends MoveableCode
      implements Function29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29, Y> {
    private final int arity = 29;
    private Closure29(Function29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29) {
      return ((Function29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29, Y> Closure29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29, Y> enclose(Function29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure29<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29, Y>)f : new Closure29<>(f);
  }

  public static class Closure30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y>
      extends MoveableCode
      implements Function30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y> {
    private final int arity = 30;
    private Closure30(Function30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30) {
      return ((Function30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y> Closure30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y> enclose(Function30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure30<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30, Y>)f : new Closure30<>(f);
  }

  public static class Closure31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31, Y>
      extends MoveableCode
      implements Function31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31, Y> {
    private final int arity = 31;
    private Closure31(Function31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31) {
      return ((Function31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31, Y> Closure31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31, Y> enclose(Function31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure31<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31, Y>)f : new Closure31<>(f);
  }

  public static class Closure32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32, Y>
      extends MoveableCode
      implements Function32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32, Y> {
    private final int arity = 32;
    private Closure32(Function32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32) {
      return ((Function32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32, Y> Closure32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32, Y> enclose(Function32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure32<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32, Y>)f : new Closure32<>(f);
  }

  public static class Closure33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33, Y>
      extends MoveableCode
      implements Function33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33, Y> {
    private final int arity = 33;
    private Closure33(Function33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33) {
      return ((Function33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33, Y> Closure33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33, Y> enclose(Function33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure33<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33, Y>)f : new Closure33<>(f);
  }

  public static class Closure34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34, Y>
      extends MoveableCode
      implements Function34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34, Y> {
    private final int arity = 34;
    private Closure34(Function34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34) {
      return ((Function34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34, Y> Closure34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34, Y> enclose(Function34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure34<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34, Y>)f : new Closure34<>(f);
  }

  public static class Closure35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35, Y>
      extends MoveableCode
      implements Function35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35, Y> {
    private final int arity = 35;
    private Closure35(Function35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35) {
      return ((Function35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35, Y> Closure35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35, Y> enclose(Function35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure35<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35, Y>)f : new Closure35<>(f);
  }

  public static class Closure36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36, Y>
      extends MoveableCode
      implements Function36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36, Y> {
    private final int arity = 36;
    private Closure36(Function36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36) {
      return ((Function36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36, Y> Closure36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36, Y> enclose(Function36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure36<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36, Y>)f : new Closure36<>(f);
  }

  public static class Closure37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37, Y>
      extends MoveableCode
      implements Function37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37, Y> {
    private final int arity = 37;
    private Closure37(Function37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37) {
      return ((Function37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37, Y> Closure37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37, Y> enclose(Function37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure37<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37, Y>)f : new Closure37<>(f);
  }

  public static class Closure38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38, Y>
      extends MoveableCode
      implements Function38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38, Y> {
    private final int arity = 38;
    private Closure38(Function38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37,X38 x38) {
      return ((Function38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37,X38, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37,x38);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38, Y> Closure38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38, Y> enclose(Function38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure38<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38, Y>)f : new Closure38<>(f);
  }

  public static class Closure39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39, Y>
      extends MoveableCode
      implements Function39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39, Y> {
    private final int arity = 39;
    private Closure39(Function39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37,X38 x38,X39 x39) {
      return ((Function39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37,X38,X39, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37,x38,x39);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39, Y> Closure39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39, Y> enclose(Function39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure39<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39, Y>)f : new Closure39<>(f);
  }

  public static class Closure40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y>
      extends MoveableCode
      implements Function40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y> {
    private final int arity = 40;
    private Closure40(Function40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37,X38 x38,X39 x39,X40 x40) {
      return ((Function40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37,x38,x39,x40);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y> Closure40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y> enclose(Function40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure40<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40, Y>)f : new Closure40<>(f);
  }

  public static class Closure41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41, Y>
      extends MoveableCode
      implements Function41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41, Y> {
    private final int arity = 41;
    private Closure41(Function41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
        X41, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37,X38 x38,X39 x39,X40 x40,
          X41 x41) {
      return ((Function41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
          X41, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,
          x41);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41, Y> Closure41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41, Y> enclose(Function41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure41<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
        X41, Y>)f : new Closure41<>(f);
  }

  public static class Closure42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41,X42, Y>
      extends MoveableCode
      implements Function42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41,X42, Y> {
    private final int arity = 42;
    private Closure42(Function42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
        X41,X42, Y> instance)
        throws IOException { super(instance); }
    @SuppressWarnings("unchecked") @Nullable @Override public Y
    apply(X1 x1,X2 x2,X3 x3,X4 x4,X5 x5,X6 x6,X7 x7,X8 x8,X9 x9,X10 x10,
          X11 x11,X12 x12,X13 x13,X14 x14,X15 x15,X16 x16,X17 x17,X18 x18,X19 x19,X20 x20,
          X21 x21,X22 x22,X23 x23,X24 x24,X25 x25,X26 x26,X27 x27,X28 x28,X29 x29,X30 x30,
          X31 x31,X32 x32,X33 x33,X34 x34,X35 x35,X36 x36,X37 x37,X38 x38,X39 x39,X40 x40,
          X41 x41,X42 x42) {
      return ((Function42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
          X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
          X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
          X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
          X41,X42, Y>) instance()).apply(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,
          x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,
          x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,
          x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,
          x41,x42);
    }
  }

  public static <X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41,X42, Y> Closure42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41,X42, Y> enclose(Function42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
      X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
      X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
      X41,X42, Y> f) throws IOException {
    return (f instanceof MoveableCode) ? (Closure42<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,
        X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,
        X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,
        X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,
        X41,X42, Y>)f : new Closure42<>(f);
  }

}
